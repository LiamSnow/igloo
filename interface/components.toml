# Primitives 
[[components]]
name = "Int"
id = 0 # NEVER change this ID or versions will be incompatible
derive_bound_types = [1, 2, 3] # makes IntMin (id=1), IntMax (id=2), IntStep (id=3)
derive_inner_list_type = 4 # makes IntList, id=4
kind = "single"
field = "i32"
desc = "signed 32-bit integer"

[[components]]
name = "Uint"
id = 5
derive_bound_types = [6, 7, 8]
derive_inner_list_type = 9
kind = "single"
field = "u32"
desc = "unsigned 32-bit integer"

[[components]]
name = "Long"
id = 10
derive_bound_types = [11, 12, 13]
derive_inner_list_type = 14
kind = "single"
field = "i64"
desc = "signed 64-bit integer"

[[components]]
name = "Float"
id = 15
derive_bound_types = [16, 17, 18]
derive_inner_list_type = 19
kind = "single"
field = "f32"
desc = "32-bit floating point"

[[components]]
name = "Double"
id = 20
derive_bound_types = [21, 22, 23]
derive_inner_list_type = 24
kind = "single"
field = "f64"
desc = "64-bit floating point"

[[components]]
name = "Bool"
id = 25
derive_inner_list_type = 26
kind = "single"
field = "bool"

[[components]]
name = "Text"
id = 27
derive_inner_list_type = 28
derive_string_bound_types = [29, 30, 31] # makes TextMaxLength, TextMinLength, TextPattern
kind = "single"
field = "String"

# Date/Time types
[[components]]
name = "Date"
id = 32
derive_list_type = 33
kind = "struct"
fields = [
    { name = "year", type = "u16" },
    { name = "month", type = "u8" },
    { name = "day", type = "u8" }
]

[[components]]
name = "Time"
id = 34
derive_list_type = 35
kind = "struct"
fields = [
    { name = "hour", type = "u8" },
    { name = "minute", type = "u8" },
    { name = "second", type = "u8" }
]

[[components]]
name = "DateTime"
id = 36
derive_list_type = 37
kind = "single"
field = "u32"
desc = "A DateTime represented as a Unix epoch"

[[components]]
name = "Duration"
id = 38
derive_list_type = 39
kind = "single"
field = "i64"
desc = "A signed duration, represented as seconds"

# Light
[[components]]
name = "Light"
id = 40
kind = "marker"
desc = ""
related = [
    { name = "Switch", reason = "on/off control" },
    { name = "Dimmer", reason = "brightness control" },
    { name = "Color", reason = "RGB color control" },
    { name = "ColorTemperature", reason = "white temperature control" },
    { name = "ColorMode", reason = "what the light is currently displaying" }
]

[[components]]
name = "Switch"
id = 41
kind = "single"
field = "bool"

[[components]]
name = "Dimmer"
id = 42
kind = "single"
field = "f32"
desc = "0.0 (0%) - 1.0 (100%)"

[[components]]
name = "Color"
id = 43
kind = "struct"
fields = [
    { name = "r", type = "u8" },
    { name = "g", type = "u8" },
    { name = "b", type = "u8" }
]

[[components]]
name = "ColorMode"
id = 44
kind = "enum"
variants = [
    { id = 0, name = "RGB" },
    { id = 1, name = "Temperature" }
]

[[components]]
name = "ColorTemperature"
id = 45
kind = "single"
field = "u16"
derive_bound_types = [46, 47, 48]


# Other
[[components]]
name = "Volume"
id = 49
kind = "single"
field = "f32"
desc = "0.0 (0%) - 1.0 (100%)"

[[components]]
name = "Muted"
id = 50
kind = "single"
field = "bool"

[[components]]
name = "Config"
id = 51
kind = "marker"
desc = "this entity is for configuration of the device"

[[components]]
name = "Diagnostic"
id = 52
kind = "marker"
desc = "this entity is for diagnosing the device"

[[components]]
name = "TextSelect"
id = 53
kind = "marker"
desc = "Usually used in a dropdown select menu"
related = [
    { name = "Text", reason = "currently selection option" },
    { name = "TextList", reason = "available options" }
]

[[components]]
name = "TextMode"
id = 54
kind = "enum"
variants = [
    { id = 0, name = "Text" },
    { id = 1, name = "Password" }
]

[[components]]
name = "Siren"
id = 55
kind = "marker"

[[components]]
name = "Sensor"
id = 56
kind = "marker"
desc = "Marks this entity as a Sensor, which usually means its immutable."

# Metadata 
[[components]]
name = "Icon"
id = 57
kind = "single"
field = "String"
desc = "Example: \"mdi:timer-outline\""

[[components]]
name = "AccuracyDecimals"
id = 58
kind = "single"
field = "i32"

[[components]]
name = "DeviceClass"
id = 59
kind = "single"
field = "String"
desc = "currently just for ESPHome"

[[components]]
name = "SensorStateClass"
id = 60
kind = "enum"
variants = [
    { id = 0, name = "Measurement" },
    { id = 1, name = "TotalIncreasing" },
    { id = 2, name = "Total" }
]

[[components]]
name = "Unit"
id = 61
kind = "enum"
variants = [
    # Apparent power units
    { id = 0, name = "VoltAmperes", aliases = ["VA"] },
    
    # Power units
    { id = 1, name = "Watts", aliases = ["W", "watt", "watts"] },
    { id = 2, name = "KiloWatts", aliases = ["kW", "kw", "kilowatt", "kilowatts"] },
    { id = 3, name = "BtusPerHour", aliases = ["BTU/h"] },
    
    # Reactive power units
    { id = 4, name = "VoltAmpereReactive", aliases = ["var"] },
    
    # Energy units
    { id = 5, name = "WattHours", aliases = ["Wh"] },
    { id = 6, name = "KiloWattHours", aliases = ["kWh"] },
    { id = 7, name = "MegaWattHours", aliases = ["MWh"] },
    
    # Electric current units
    { id = 8, name = "Milliamperes", aliases = ["mA", "milliampere", "milliamperes", "milliamps", "milliamp"] },
    { id = 9, name = "Amperes", aliases = ["A", "amps", "amp", "ampere", "amperes"] },
    
    # Electric potential units
    { id = 10, name = "Millivolts", aliases = ["mV", "millivolts"] },
    { id = 11, name = "Volts", aliases = ["V", "volt", "volts"] },
    
    # Degree units
    { id = 12, name = "Degrees", aliases = ["°", "degree", "degrees"] },
    
    # Currency units
    { id = 13, name = "Euros", aliases = ["€", "euro", "euros"] },
    { id = 14, name = "Dollars", aliases = ["$", "dollar", "dollars"] },
    { id = 15, name = "Cents", aliases = ["¢", "cent", "cents"] },
    
    # Temperature units
    { id = 16, name = "Celsius", aliases = ["°C", "celcius"] },
    { id = 17, name = "Fahrenheit", aliases = ["°F", "fahrenheit"] },
    { id = 18, name = "Kelvin", aliases = ["K", "kelvin"] },
    
    # Time units
    { id = 19, name = "Microseconds", aliases = ["μs", "us", "microseconds"] },
    { id = 20, name = "Milliseconds", aliases = ["ms", "milliseconds"] },
    { id = 21, name = "Seconds", aliases = ["s", "seconds"] },
    { id = 22, name = "Minutes", aliases = ["min", "mins", "minute", "minutes"] },
    { id = 23, name = "Hours", aliases = ["h", "hour", "hours"] },
    { id = 24, name = "Days", aliases = ["d", "day", "days"] },
    { id = 25, name = "Weeks", aliases = ["w", "wk", "wks", "week", "weeks"] },
    { id = 26, name = "Months", aliases = ["month", "months"] },
    { id = 27, name = "Years", aliases = ["y", "year", "years"] },
    
    # Length units
    { id = 28, name = "Millimeters", aliases = ["mm"] },
    { id = 29, name = "Centimeters", aliases = ["cm"] },
    { id = 30, name = "Meters", aliases = ["m"] },
    { id = 31, name = "Kilometers", aliases = ["km"] },
    { id = 32, name = "Inches", aliases = ["in"] },
    { id = 33, name = "Feet", aliases = ["ft"] },
    { id = 34, name = "Yard", aliases = ["yd"] },
    { id = 35, name = "Miles", aliases = ["mi"] },
    
    # Frequency units
    { id = 36, name = "Hertz", aliases = ["Hz"] },
    { id = 37, name = "Kilohertz", aliases = ["kHz"] },
    { id = 38, name = "Megahertz", aliases = ["MHz"] },
    { id = 39, name = "Gigahertz", aliases = ["GHz"] },
    
    # Pressure units
    { id = 40, name = "Pascal", aliases = ["Pa"] },
    { id = 41, name = "Hectopascal", aliases = ["hPa"] },
    { id = 42, name = "Kilopascal", aliases = ["kPa"] },
    { id = 43, name = "Bar", aliases = ["bar"] },
    { id = 44, name = "Centibar", aliases = ["cbar"] },
    { id = 45, name = "Millibar", aliases = ["mbar"] },
    { id = 46, name = "MillimeterMercury", aliases = ["mmHg"] },
    { id = 47, name = "InchMercury", aliases = ["inHg"] },
    { id = 48, name = "Psi", aliases = ["psi"] },
    
    # Sound pressure units
    { id = 49, name = "Decibel", aliases = ["dB", "decibel", "decibels"] },
    { id = 50, name = "DecibelAWeighted", aliases = ["dBa"] },
    { id = 51, name = "DecibelsMilliwatt", aliases = ["dBm"] },
    
    # Volume units
    { id = 52, name = "Liters", aliases = ["L"] },
    { id = 53, name = "Milliliters", aliases = ["mL"] },
    { id = 54, name = "CubicMeters", aliases = ["m³"] },
    { id = 55, name = "CubicFeet", aliases = ["ft³"] },
    { id = 56, name = "Gallons", aliases = ["gal"] },
    { id = 57, name = "FluidOunce", aliases = ["fl. oz."] },
    
    # Volume Flow Rate units
    { id = 58, name = "CubicMetersPerHour", aliases = ["m³/h"] },
    { id = 59, name = "CubicFeetPerMinute", aliases = ["ft³/m"] },
    
    # Area units
    { id = 60, name = "SquareMeters", aliases = ["m²"] },
    
    # Mass units
    { id = 61, name = "Grams", aliases = ["g"] },
    { id = 62, name = "Kilograms", aliases = ["kg"] },
    { id = 63, name = "Milligrams", aliases = ["mg"] },
    { id = 64, name = "Micrograms", aliases = ["µg"] },
    { id = 65, name = "Ounces", aliases = ["oz"] },
    { id = 66, name = "Pounds", aliases = ["lb"] },
    
    # Conductivity units
    { id = 67, name = "MicrosiemensPerCentimeter", aliases = ["µS/cm"] },
    
    # Light units
    { id = 68, name = "Lux", aliases = ["lx"] },
    
    # UV Index units
    { id = 69, name = "UvIndex", aliases = ["UV index"] },
    
    # Percentage units
    { id = 70, name = "Percentage", aliases = ["%"] },
    
    # Irradiation units
    { id = 71, name = "WattsPerSquareMeter", aliases = ["W/m²"] },
    { id = 72, name = "BtusPerHourSquareFoot", aliases = ["BTU/(h×ft²)"] },
    
    # Concentration units
    { id = 73, name = "MicrogramsPerCubicMeter", aliases = ["µg/m³"] },
    { id = 74, name = "MilligramsPerCubicMeter", aliases = ["mg/m³"] },
    { id = 75, name = "MicrogramsPerCubicFoot", aliases = ["μg/ft³"] },
    { id = 76, name = "PartsPerCubicMeter", aliases = ["p/m³"] },
    { id = 77, name = "PartsPerMillion", aliases = ["ppm"] },
    { id = 78, name = "PartsPerBillion", aliases = ["ppb"] },
    
    # Speed units
    { id = 79, name = "MillimetersPerDay", aliases = ["mm/d"] },
    { id = 80, name = "MillimetersPerHour", aliases = ["mm/h"] },
    { id = 81, name = "FeetPerSecond", aliases = ["ft/s"] },
    { id = 82, name = "InchesPerDay", aliases = ["in/d"] },
    { id = 83, name = "MetersPerSecond", aliases = ["m/s"] },
    { id = 84, name = "InchesPerHour", aliases = ["in/h"] },
    { id = 85, name = "KilometersPerHour", aliases = ["km/h"] },
    { id = 86, name = "Knots", aliases = ["kn"] },
    { id = 87, name = "MilesPerHour", aliases = ["mph"] },
    
    # Data units
    { id = 88, name = "Bits", aliases = ["bit"] },
    { id = 89, name = "Kilobits", aliases = ["kbit"] },
    { id = 90, name = "Megabits", aliases = ["Mbit"] },
    { id = 91, name = "Gigabits", aliases = ["Gbit"] },
    { id = 92, name = "Bytes", aliases = ["B"] },
    { id = 93, name = "Kilobytes", aliases = ["kB"] },
    { id = 94, name = "Megabytes", aliases = ["MB"] },
    { id = 95, name = "Gigabytes", aliases = ["GB"] },
    { id = 96, name = "Terabytes", aliases = ["TB"] },
    { id = 97, name = "Petabytes", aliases = ["PB"] },
    { id = 98, name = "Exabytes", aliases = ["EB"] },
    { id = 99, name = "Zettabytes", aliases = ["ZB"] },
    { id = 100, name = "Yottabytes", aliases = ["YB"] },
    { id = 101, name = "Kibibytes", aliases = ["KiB"] },
    { id = 102, name = "Mebibytes", aliases = ["MiB"] },
    { id = 103, name = "Gibibytes", aliases = ["GiB"] },
    { id = 104, name = "Tebibytes", aliases = ["TiB"] },
    { id = 105, name = "Pebibytes", aliases = ["PiB"] },
    { id = 106, name = "Exbibytes", aliases = ["EiB"] },
    { id = 107, name = "Zebibytes", aliases = ["ZiB"] },
    { id = 108, name = "Yobibytes", aliases = ["YiB"] },
    
    # Data rate units
    { id = 109, name = "BitsPerSecond", aliases = ["bit/s"] },
    { id = 110, name = "KilobitsPerSecond", aliases = ["kbit/s"] },
    { id = 111, name = "MegabitsPerSecond", aliases = ["Mbit/s"] },
    { id = 112, name = "GigabitsPerSecond", aliases = ["Gbit/s"] },
    { id = 113, name = "BytesPerSecond", aliases = ["B/s"] },
    { id = 114, name = "KilobytesPerSecond", aliases = ["kB/s"] },
    { id = 115, name = "MegabytesPerSecond", aliases = ["MB/s"] },
    { id = 116, name = "GigabytesPerSecond", aliases = ["GB/s"] },
    { id = 117, name = "KibibytesPerSecond", aliases = ["KiB/s"] },
    { id = 118, name = "MebibytesPerSecond", aliases = ["MiB/s"] },
    { id = 119, name = "GibibytesPerSecond", aliases = ["GiB/s"] },
]

[[components]]
name = "NumberMode"
id = 62
kind = "enum"
variants = [
    { id = 0, name = "Auto" },
    { id = 1, name = "Box" },
    { id = 2, name = "Slider" }
]

[[components]]
name = "FanOscillation"
id = 63
derive_supported_type = 64
kind = "enum"
variants = [
    { id = 0, name = "Off", aliases = ["off"] },
    { id = 1, name = "On", aliases = ["on"] },
    { id = 2, name = "Vertical", aliases = ["vertical"] },
    { id = 3, name = "Horizontal", aliases = ["horizontal"] },
    { id = 4, name = "Both", aliases = ["both"] }
]

[[components]]
name = "FanDirection"
id = 65
derive_supported_type = 66 # makes SupportedFanDirections
kind = "enum"
variants = [
    { id = 0, name = "Forward", aliases = ["forward"] },
    { id = 1, name = "Reverse", aliases = ["reverse"] },
]

[[components]]
name = "FanSpeed"
id = 67
kind = "enum"
derive_supported_type = 68
variants = [
    { id = 0, name = "On", aliases = ["on"] },
    { id = 1, name = "Off", aliases = ["off"] },
    { id = 2, name = "Auto", aliases = ["auto"] },
    { id = 3, name = "Low", aliases = ["low"] },
    { id = 4, name = "Medium", aliases = ["medium"] },
    { id = 5, name = "High", aliases = ["high"] },
    { id = 6, name = "Middle", aliases = ["middle"] },
    { id = 7, name = "Focus", aliases = ["focus"] },
    { id = 8, name = "Diffuse", aliases = ["diffuse"] },
    { id = 9, name = "Quiet", aliases = ["quiet"] }
]

[[components]]
name = "ClimateMode"
id = 69
kind = "enum"
derive_supported_type = 70
variants = [
    { id = 0, name = "Off", aliases = ["off"] },
    { id = 1, name = "Auto", aliases = ["auto"] },
    { id = 2, name = "Heat", aliases = ["heat"] },
    { id = 3, name = "Cool", aliases = ["cool"] },
    { id = 4, name = "HeatCool", aliases = ["heat_cool"] },
    { id = 5, name = "FanOnly", aliases = ["fan_only"] },
    { id = 6, name = "Dry", aliases = ["dry"] },
    { id = 7, name = "Eco", aliases = ["eco"] },
]

[[components]]
name = "LockState"
id = 71
kind = "enum"
derive_supported_type = 72
variants = [
    { id = 0, name = "Unknown", aliases = ["unknown"] },
    { id = 1, name = "Locked", aliases = ["locked"] },
    { id = 2, name = "Unlocked", aliases = ["unlocked"] },
    { id = 3, name = "Jammed", aliases = ["jammed"] },
    { id = 4, name = "Locking", aliases = ["locking"] },
    { id = 5, name = "Unlocking", aliases = ["unlocking"] },
]

[[components]]
name = "MediaState"
id = 73
kind = "enum"
derive_supported_type = 74
variants = [
    { id = 0, name = "Unknown", aliases = ["unknown"] },
    { id = 1, name = "Idle", aliases = ["idle"] },
    { id = 2, name = "Playing", aliases = ["playing"] },
    { id = 3, name = "Paused", aliases = ["paused"] },
]

# Cover
[[components]]
name = "Cover"
id = 75
kind = "marker"
desc = ""
related = [
    { name = "CoverState", reason = "current state" },
    { name = "Position", reason = "position of the cover" },
    { name = "Tilt", reason = "tilt of the cover" },
]

[[components]]
name = "CoverState"
id = 76
kind = "enum"
derive_supported_type = 77
variants = [
    { id = 0, name = "Idle", aliases = ["idle"] },
    { id = 1, name = "Opening", aliases = ["opening"] },
    { id = 2, name = "Closing", aliases = ["closing"] },
    { id = 3, name = "Stopped", aliases = ["stopped"] },
    { id = 4, name = "Open", aliases = ["open"] },
    { id = 5, name = "Closed", aliases = ["closed"] },
]

[[components]]
name = "Position"
id = 78
kind = "single"
field = "f32"

[[components]]
name = "Tilt"
id = 79
kind = "single"
field = "f32"

# Valve
[[components]]
name = "Valve"
id = 80
kind = "marker"
desc = ""
related = [
    { name = "ValveState", reason = "current state" },
    { name = "Position", reason = "position of the valve" },
]

[[components]]
name = "ValveState"
id = 81
kind = "enum"
derive_supported_type = 82
variants = [
    { id = 0, name = "Idle", aliases = ["idle"] },
    { id = 1, name = "Opening", aliases = ["opening", "is_opening"] },
    { id = 2, name = "Closing", aliases = ["closing", "is_closing"] },
]


[[components]]
name = "AlarmState"
id = 83
kind = "enum"
variants = [
    { id = 0, name = "Disarmed", aliases = ["disarmed"] },
    { id = 1, name = "ArmedHome", aliases = ["armed_home"] },
    { id = 2, name = "ArmedAway", aliases = ["armed_away"] },
    { id = 3, name = "ArmedNight", aliases = ["armed_night"] },
    { id = 4, name = "ArmedVacation", aliases = ["armed_vacation"] },
    { id = 5, name = "ArmedUnknown", aliases = ["armed_unknown", "armed"] },
    { id = 6, name = "Pending", aliases = ["pending"] },
    { id = 7, name = "Triggered", aliases = ["triggered"] },
    { id = 8, name = "Arming", aliases = ["arming"] },
    { id = 9, name = "Disarming", aliases = ["disarming"] },
]
